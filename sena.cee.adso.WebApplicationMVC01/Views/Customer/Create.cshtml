@model sena.cee.adso.WebApplicationMVC01.Models.Customer

@{
    ViewData["Title"] = "Create";

    @if (ViewBag.ResultFail != null)
    {
        <script>
            alert("Usuario Duplicado, no se puede guardar en la base de datos");          
        </script>
    }
}


<div class="container box-shadow p-5">
    <h1>Agregar Cliente</h1>

    <form method="post" asp-controller="Customer" asp-action="Create">

        <div asp-validation-summary = "ModelOnly" class="text-danger"></div>

        <div class="form-row">
             <div class="form-group col-md-6">
                 <label asp-for="FirstName" class="form-label"></label>
                <input type="text" class="form-control mb-3" asp-for="FirstName" placeholder="Ingrese los nombres del cliente" oninput="validarTextBox()  />
                 <span asp-validation-for="FirstName" class="alert-danger"></span>
            </div>

             <div class="form-group col-md-6">
                 <label asp-for="LastName" class="form-label"></label>
                <input type="text" class="form-control mb-3" asp-for="LastName" placeholder="Ingrese los apellidos del cliente" oninput="validarTextBox()  />
                 <span asp-validation-for="LastName" class="alert-danger"></span>
            </div>

            <div class="form-group col-md-6">
                 <label asp-for="City">Ciudad:</label>
                <input type="text" class="form-control mb-3" asp-for="City" placeholder="Ingrese el nombre de la ciudad" oninput="validarTextBox()  />
                 <span asp-validation-for="City" class="alert-danger"></span>
            </div>

            <div class="form-group col-md-6">
                 <label asp-for="Country">País:</label>
                <input type="text" class="form-control mb-3" asp-for="Country" placeholder="Ingrese el nombre del país" oninput="validarTextBox()  />
                 <span asp-validation-for="Country" class="alert-danger"></span>
            </div>

            <div class="form-group col-md-6">
                 <label asp-for="Phone">Teléfono:</label>
                <input type="text" class="form-control mb-3" asp-for="Phone" placeholder="Ingrese el número de teléfono" oninput="validarTextBox() />
                 <span asp-validation-for="Phone" class="alert-danger"></span>
            </div>

           @*Botones*@
           <div>
                <button type="submit" class="btn btn-primary btn-lg p-2">
                    <i class="bi bi-save2-fill"></i>
                    Guardar
                </button>

                <a asp-controller="Customer" asp-action="Index" class="btn btn-lg btn-danger p-2">
                    <i class="bi bi-box-arrow-left"></i>
                    Regresar
                </a>
           </div>           

        </div>
    </form>
</div>

@section Scripts{
    <partial name= "_ValidationScriptsPartial" />
}

<script>
    document.addEventListener("DOMContentLoaded", validarTextBox() {
        var form = document.querySelector("form");
        form.addEventListener("submit", function (event) {
            var firstName = document.querySelector("#FirstName");
            var lastName = document.querySelector("#LastName");
            var city = document.querySelector("#City");
            var country = document.querySelector("#Country");
            var phone = document.querySelector("#Phone");

            var nameRegex = /^[A-Za-zñÑáéíóúÁÉÍÓÚ\s]+$/;
            var phoneRegex = /^\d{10}$/;

            var isValid = true;

            if (!nameRegex.test(firstName.value)) {
                firstName.classList.add("is-invalid");
                isValid = false;
            } else {
                firstName.classList.remove("is-invalid");
            }

            if (!nameRegex.test(lastName.value)) {
                lastName.classList.add("is-invalid");
                isValid = false;
            } else {
                lastName.classList.remove("is-invalid");
            }

            if (!nameRegex.test(city.value)) {
                city.classList.add("is-invalid");
                isValid = false;
            } else {
                city.classList.remove("is-invalid");
            }

            if (!nameRegex.test(country.value)) {
                country.classList.add("is-invalid");
                isValid = false;
            } else {
                country.classList.remove("is-invalid");
            }

            if (!phoneRegex.test(phone.value)) {
                phone.classList.add("is-invalid");
                isValid = false;
            } else {
                phone.classList.remove("is-invalid");
            }

            if (!isValid) {
                event.preventDefault();
            }
        });
    });
</script>

