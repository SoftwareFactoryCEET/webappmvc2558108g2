// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sena.cee.adso.WebApplicationMVC01.Data;

#nullable disable

namespace sena.cee.adso.WebApplicationMVC01.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230515223055_TPC2")]
    partial class TPC2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BooksBookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BooksBookId");

                    b.HasIndex("BooksBookId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.AuthorBiography", b =>
                {
                    b.Property<int>("AuthorBiographyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorBiographyId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorBiographyId");

                    b.HasIndex("AuthorId")
                        .IsUnique();

                    b.ToTable("AuthorBiographies");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.BookCategory", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategory");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<decimal>("Charge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Months")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ContractId");

                    b.ToTable("Contracts");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.BroadBandContract", b =>
                {
                    b.HasBaseType("sena.cee.adso.WebApplicationMVC01.Models.Contract");

                    b.Property<int>("DownloadSpeed")
                        .HasColumnType("int");

                    b.ToTable("BroadBandContract");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.MobileContract", b =>
                {
                    b.HasBaseType("sena.cee.adso.WebApplicationMVC01.Models.Contract");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("MobileContract");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.TvContract", b =>
                {
                    b.HasBaseType("sena.cee.adso.WebApplicationMVC01.Models.Contract");

                    b.Property<int>("PackageType")
                        .HasColumnType("int");

                    b.ToTable("TvContract");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("sena.cee.adso.WebApplicationMVC01.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sena.cee.adso.WebApplicationMVC01.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.AuthorBiography", b =>
                {
                    b.HasOne("sena.cee.adso.WebApplicationMVC01.Models.Author", "Author")
                        .WithOne("Biography")
                        .HasForeignKey("sena.cee.adso.WebApplicationMVC01.Models.AuthorBiography", "AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.BookCategory", b =>
                {
                    b.HasOne("sena.cee.adso.WebApplicationMVC01.Models.Book", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sena.cee.adso.WebApplicationMVC01.Models.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Order", b =>
                {
                    b.HasOne("sena.cee.adso.WebApplicationMVC01.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.BroadBandContract", b =>
                {
                    b.HasOne("sena.cee.adso.WebApplicationMVC01.Models.Contract", null)
                        .WithOne()
                        .HasForeignKey("sena.cee.adso.WebApplicationMVC01.Models.BroadBandContract", "ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.MobileContract", b =>
                {
                    b.HasOne("sena.cee.adso.WebApplicationMVC01.Models.Contract", null)
                        .WithOne()
                        .HasForeignKey("sena.cee.adso.WebApplicationMVC01.Models.MobileContract", "ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.TvContract", b =>
                {
                    b.HasOne("sena.cee.adso.WebApplicationMVC01.Models.Contract", null)
                        .WithOne()
                        .HasForeignKey("sena.cee.adso.WebApplicationMVC01.Models.TvContract", "ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Author", b =>
                {
                    b.Navigation("Biography");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Book", b =>
                {
                    b.Navigation("BookCategories");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Category", b =>
                {
                    b.Navigation("BookCategories");
                });

            modelBuilder.Entity("sena.cee.adso.WebApplicationMVC01.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
